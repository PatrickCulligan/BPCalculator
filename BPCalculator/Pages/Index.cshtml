@page
@model BPCalculator.Pages.BloodPressureModel

@{
    ViewData["Title"] = "BP Category Calculator Test";
}

<h4>BP Category Calculator Demo 1.5</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post" id="form1">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="BP.Systolic" class="control-label"></label>
                <input asp-for="BP.Systolic" class="form-control" />
                <span asp-validation-for="BP.Systolic" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="BP.Diastolic" class="control-label"></label>
                <input asp-for="BP.Diastolic" class="form-control" />
                <span asp-validation-for="BP.Diastolic" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Submit" class="btn btn-primary" />
            </div>
            @if (ViewData.ModelState.IsValid)
            {
                <div class="form-group">
                    <p>Category: @Html.DisplayFor(model => model.BP.Category)</p>

                </div>
            }
        </form>
    </div>
</div>

@if (ViewData.ModelState.IsValid)
{
    <div class="row mt-5">
        <div class="col-md-8">
            <canvas id="bpChart" width="400" height="200"></canvas>
        </div>
    </div>
}

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        @if (ViewData.ModelState.IsValid)
        {
            <text>
                var ctx = document.getElementById('bpChart').getContext('2d');
                var bpChart = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: ['Systolic', 'Diastolic'],
                        datasets: [{
                            label:  'Blood Pressure Readings',
                            data: [@Model.BP.Systolic, @Model.BP.Diastolic],
                            backgroundColor: [
                                'rgba(54, 162, 235, 0.2)',
                                'rgba(255, 99, 132, 0.2)'
                            ],
                            borderColor: [
                                'rgba(54, 162, 235, 1)',
                                'rgba(255, 99, 132, 1)'
                            ],
                            borderWidth: 1
                        }]
                    },
                    options: {
                        scales: {
                            y: {
                                beginAtZero: true
                            }
                        }
                    }
                });
            </text>
        }
    </script>
}
